version: "3"
services:
  db:
    image: "postgres:9.6-alpine"
    container_name: skeleton-db
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=skeleton
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    command: ["postgres", "-c", "log_statement=all"]

  ldap:
    image: nthachus/alpine-ldap
    container_name: skeleton-ldap
    volumes:
      - "./spec/fixtures/ldap_data:/etc/ldap:ro"
      - ldap_conf:/etc/openldap/slapd.d
      - ldap_data:/var/lib/openldap/openldap-data
    environment:
      - LOG_LEVEL=834
    ports:
      - 389:389
      - 636:636

  api-dev:
    build: .
    image: "ami/ruby:2.3"
    container_name: skeleton-api
    volumes:
      - ".:/usr/src/app"
    working_dir: /usr/src/app
    environment:
      - GEM_HOME=/usr/src/app/vendor/bundle/ruby/2.3.0
    ports:
      - 3000:3000
    depends_on:
      - db
      - ldap
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.file-type-cron.schedule: "@every 1m1s"
      ofelia.job-exec.file-type-cron.command: "rake app:identify_file_types[5]"
      ofelia.job-exec.file-checksum-cron.schedule: "@every 2m7s"
      ofelia.job-exec.file-checksum-cron.command: "rake app:compute_file_checksums"
    command: /bin/bash -c "
      bundle install --path vendor/bundle --without '' --frozen --no-cache
      && rm -rf ~/.bundle && gem check
      && $$GEM_HOME/bin/rubocop
      &&
      if ! rake 'db:version' RACK_ENV=development 2>/dev/null; then
      rake 'db:create' 'db:migrate' 'db:seed' RACK_ENV=development && rake 'db:migrate' 'db:seed' RACK_ENV=test;
      fi
      && touch tmp/pids/unicorn.pid
      && if [ ! -f ./coverage/index.html ]; then $$GEM_HOME/bin/rspec; fi
      && $$GEM_HOME/bin/thin -t 86400 start
      "

  api-prod:
    build:
      context: .
      target: ruby_runtime
    image: "ami/ruby:2.3-slim"
    container_name: skeleton-api
    volumes:
      - ".:/usr/src/app"
    working_dir: /usr/src/app
    environment:
      - GEM_HOME=/usr/src/app/vendor/bundle/ruby/2.3.0
    ports:
      - 3000:3000
    depends_on:
      - db
      - ldap
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.file-type-cron.schedule: "@every 1m1s"
      ofelia.job-exec.file-type-cron.command: "rake app:identify_file_types[20] RACK_ENV=production"
      ofelia.job-exec.expired-upload-cron.schedule: "@every 1m"
      ofelia.job-exec.expired-upload-cron.command: "rake app:delete_expired_uploads RACK_ENV=production"
      ofelia.job-exec.file-checksum-cron.schedule: "@every 2m7s"
      ofelia.job-exec.file-checksum-cron.command: "rake app:compute_file_checksums[10] RACK_ENV=production"
    command: /bin/bash -c "
      [ -f $$GEM_HOME/bin/unicorn ]
      && bundle check && bundle config --local without 'test:development' && bundle clean
      && if ! rake 'db:version' RACK_ENV=production 2>/dev/null; then rake 'db:setup' RACK_ENV=production; fi
      && rm -f tmp/pids/unicorn.pid
      && $$GEM_HOME/bin/unicorn -c unicorn.rb -E production
      "

  proxy:
    image: "nginx:alpine"
    container_name: skeleton-proxy
    volumes:
      - "./spec/fixtures/nginx_data:/etc/nginx/data:ro"
      - "./spec/fixtures/ldap_data:/etc/nginx/ssl:ro"
    ports:
      - 80:80
      - 443:443
    command: /bin/sh -c "
      while ! nc -z skeleton-api 3000; do sleep 1; done
      && mkdir /var/www && ln -s /usr/share/nginx/html /var/www/html
      && mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak
      && ln -s /etc/nginx/data/site.conf /etc/nginx/conf.d/default.conf
      && nginx -g 'daemon off;'
      "

  cron-dev:
    image: mcuadros/ofelia
    container_name: skeleton-cron
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - api-dev
    command: daemon --docker

  cron-prod:
    image: mcuadros/ofelia
    container_name: skeleton-cron
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - api-prod
    command: daemon --docker

volumes:
  pg_data:
  ldap_conf:
  ldap_data:
