upstream unicorn_app {
  server skeleton-prod:3000 fail_timeout=0;
}

# Virtual host configuration
server {
  # Port to listen for requests on
  listen 443 default_server ssl;
  server_name _;

  # Maximum accepted body size of client request
  client_max_body_size 4G;
  client_body_timeout 1d;
  send_timeout 1d;
  # The server will close connections after this time
  keepalive_timeout 2h;

  # GZip Settings
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_types text/plain text/css application/json text/javascript application/javascript text/xml application/xml image/svg+xml;

  # SSL Settings
  ssl_certificate /etc/nginx/ssl/server.crt;
  ssl_certificate_key /etc/nginx/ssl/server.key;
  ssl_client_certificate /etc/nginx/ssl/ca.crt;
  ssl_verify_client optional;

  root /usr/share/nginx/html;
  index index.html;
  # Limiting the Bandwidth
  limit_rate 4M;

  location / {
    charset utf-8;
    charset_types text/xml application/xml text/plain text/javascript application/javascript text/css application/json;
    # Angular fallback configuration
    try_files $uri $uri/ /index.html;
  }

  # Setup reverse proxy for API calls
  location /api/v1/ {
    include /etc/nginx/data/proxy.conf;

    rewrite ^/api/v1/(.*)$ /$1 break;
    proxy_pass http://unicorn_app;
  }

  # SSL protected URL(s)
  location ~ ^/api/v1/((.*/)*login_ssl)$ {
    # If the client-side certificate failed to authenticate?
    if ($ssl_client_verify != SUCCESS) {
      return 403;
    }

    include /etc/nginx/data/proxy.conf;
    proxy_set_header X-SSL-Client-Cert $ssl_client_escaped_cert;

    proxy_pass http://unicorn_app/$1$is_args$args;
  }
}

# Redirect all HTTP to HTTPS
server {
  listen 80 default_server;
  server_name _;

  return 301 https://$host$request_uri;
}
